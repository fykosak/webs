{layout '../@layout.latte'}
{varType App\Modules\Core\Language $lang}
{block content}

<div class="row">
    <div class="col-12">

        <!-- The button that triggers the collapsible content -->
        <button class="btn btn-primary-inverted button-collapse-header" type="button" data-bs-toggle="collapse"
        data-bs-target="#resultFilters" aria-expanded="false" aria-controls="resultFilters">
        {switch $lang->value}
            {case cs}Zobrazit / skrýt filtry
            {default}Toggle filters
        {/switch}
        </button>


        <!-- The collapsible content -->
        <div class="collapse toggle-content px-3" id="resultFilters">
            {control filterForm}
        </div>
    </div>
</div>
<div class="team-results-control">
    {foreach $teams AS $category => $teamsForCategory}
        <button class="btn btn-primary button-collapse-header" type="button" data-bs-toggle="collapse"
        data-bs-target="#collapse-category-{$category}" aria-expanded="false" aria-controls="collapse-category-{$category}">
        {switch $lang->value}
            {case cs}Kategorie
            {default}Category
        {/switch} {$category}
        </button>

        <!-- The collapsible content -->
        <div class="collapse toggle-content" id="collapse-category-{$category}">
            <!-- <h2 id="{$category}">{$category}</h2> -->

            <div class="results-first-row results-header">
                <div class="result-column" style="width: 5rem">#</div>
                <div class="result-column" style="flex-grow: 1">{switch $lang->value}{case cs}Tým{default}Team{/switch}</div>
                <div class="result-column" style="width: 5rem">{switch $lang->value}{case cs}Body{default}Points{/switch}</div>
                <div class="result-column" style="width: 5rem">{switch $lang->value}{case cs}Celkové pořadí{default}Rank total{/switch}</div>
            </div>
            {do usort($teamsForCategory, fn($a, $b) => ($a->rankCategory ? $a->rankCategory : PHP_INT_MAX) <=> ($b->rankCategory ? $b->rankCategory : PHP_INT_MAX))}
            {foreach $teamsForCategory AS $index => $team}
                <div class="results-row">
                    <div class="results-first-row">
                        {varType App\Models\Downloader\TeamModel $team}
                        <div class="result-column"
                            style="width: 5rem">{if $team->state === 'disqualified'}DNQ{else}{$team->rankCategory}.{/if}</div>
                        <div class="result-column" style="flex-grow: 1"><strong>{$team->name}</strong></div>
                        <div class="result-column"
                            style="width: 5rem">{if $team->state === 'disqualified'}{else}{$team->points}{/if}</div>
                        <div class="result-column"
                            style="width: 5rem">{if $team->state === 'disqualified'}{else}{$team->rankTotal}.{/if}</div>
                    </div>
                    <div class="results-second-row">
                        <div class="result-column text-muted" style="flex-grow: 1; margin-left: 5rem; margin-right: 10rem">
                            {switch $lang->value}{case cs}{var $notAStudentText = 'Nestudent'}{default}{var $notAStudentText = 'Not a student'}{/switch}
                            {var $inSchool = 0}
                            {if $team->members && count($team->members)}
                                {do
                                    $members = $team->members;
                                    usort($members, fn(App\Models\Downloader\TeamMemberModel $a, App\Models\Downloader\TeamMemberModel $b) => ($a->school['schoolId']??0) <=> ($b->school['schoolId']??0))
                                }
                                {foreach $members as $key => $member}
                                    {varType App\Models\Downloader\TeamMemberModel $member}
                                    {do $inSchool++}
                                    {if $iterator->isLast() || (!is_null($members[$key + 1]) && isset($member->school) && isset($members[$key + 1]->school) && $member->school['schoolId'] != $members[$key + 1]->school['schoolId'])}
                                        {$member->name|trim}
                                        <span class="text-muted"> ({if $inSchool > 1}{$inSchool}&nbsp;&times;&nbsp;{/if}{$member->school['nameAbbrev']??$notAStudentText}{if isset($member->school) && $member->school['countryISO'] !== null}
                                            <span class="fi fi-{$member->school['countryISO']??'zz'|lower}"></span>{/if})</span>{if !$iterator->isLast()},{/if}
                                        {do $inSchool = 0}
                                    {else}
                                        {$member->name|trim}{if !$iterator->isLast()},{/if}
                                    {/if}
                                {/foreach}
                            {else}
                                {switch $lang->value}
                                    {case cs}informace o členech týmu nejsou dostupné
                                    {default}no info avaiable
                                {/switch}
                            {/if}
                        </div>
                    </div>
                </div>
            {/foreach}
        </div>
    {/foreach}
</div>
{/block}
